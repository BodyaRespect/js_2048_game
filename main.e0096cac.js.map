{"version":3,"sources":["scripts/main.js"],"names":["DIRECTION_UP","DIRECTION_DOWN","DIRECTION_LEFT","DIRECTION_RIGHT","board","score","wonGame","tileContainer","document","querySelector","scoreElement","getElementById","alertElement","createBoard","i","row","j","push","startNewGame","style","display","innerHTML","window","addEventListener","onDirectionKeyPress","addRandomTile","continuePlaying","argument","movePossible","key","moveTiles","gameOver","isGameOver","showAlert","message","isWithinBounds","index","step","limit","directionY","directionX","mergedRecently","startX","stepX","destination","getDestinationSquare","tileClass","tile","merge","destinationX","moveTileOnPage","startY","stepY","destinationY","shouldContinue","direction","current","nextY","nextX","nextCell","currentCell","column","Array","from","classList","forEach","className","startsWith","remove","add","elements","querySelectorAll","length","removeChild","addTileToPage","value","createElement","appendChild","emptyTiles","Math","floor","random","randomI","randomJ","emptySquare","createAlert","divText","buttons","alertedElement","innerText","button","alertedButton","text","onclick","handler","removeEventListener","alertDiv","flexDirection"],"mappings":"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","file":"main.e0096cac.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst DIRECTION_UP = 'ArrowUp';\nconst DIRECTION_DOWN = 'ArrowDown';\nconst DIRECTION_LEFT = 'ArrowLeft';\nconst DIRECTION_RIGHT = 'ArrowRight';\n\nlet board = [];\nlet score = 0;\nlet wonGame = false;\n\nconst tileContainer = document.querySelector('.tileContainer');\nconst scoreElement = document.getElementById('scoreElement');\nconst alertElement = document.getElementById('alert');\n\ndocument.getElementById('newGame').addEventListener('click', startNewGame);\n\ncreateBoard();\naddRandomTile();\naddRandomTile();\n\nfunction createBoard() {\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = 0; j < 4; j++) {\n      row.push(0);\n    }\n\n    board.push(row);\n  }\n}\n\nfunction startNewGame() {\n  alertElement.style.display = 'none';\n  tileContainer.innerHTML = '';\n  scoreElement.innerHTML = 0;\n\n  board = [];\n  score = 0;\n  wonGame = false;\n  window.addEventListener('keydown', onDirectionKeyPress);\n\n  createBoard();\n  addRandomTile();\n  addRandomTile();\n}\n\nfunction continuePlaying() {\n  alertElement.style.display = 'none';\n  window.addEventListener('keydown', onDirectionKeyPress);\n}\n\nwindow.addEventListener('keydown', onDirectionKeyPress);\n\nfunction onDirectionKeyPress(argument) {\n  let movePossible;\n\n  switch (argument.key) {\n    case DIRECTION_UP:\n      movePossible = moveTiles(1, 0);\n      break;\n\n    case DIRECTION_DOWN:\n      movePossible = moveTiles(-1, 0);\n      break;\n\n    case DIRECTION_LEFT:\n      movePossible = moveTiles(0, -1);\n      break;\n\n    case DIRECTION_RIGHT:\n      movePossible = moveTiles(0, 1);\n      break;\n  }\n\n  if (movePossible) {\n    addRandomTile();\n\n    const gameOver = isGameOver();\n\n    if (gameOver.gameOver) {\n      showAlert(gameOver.message);\n    }\n  }\n}\n\nfunction isWithinBounds(index, step, limit) {\n  return (index <= limit && step === 1) || (index >= 0 && step === -1);\n}\n\nfunction moveTiles(directionY, directionX) {\n  let movePossible = false;\n  let mergedRecently = false;\n\n  if (directionX !== 0) {\n    const startX = directionX === 1 ? 3 : 0;\n    const stepX = directionX === 1 ? -1 : 1;\n\n    for (let i = 0; i < 4; i++) {\n      let j = startX;\n\n      while (isWithinBounds(j, stepX, 3)) {\n        if (board[i][j] === 0) {\n          j += stepX;\n          continue;\n        }\n\n        const destination = getDestinationSquare(i, j, 0, directionX);\n        const tileClass = '.row' + (i + 1) + '.column' + (j + 1);\n        const tile = document.querySelector(tileClass);\n\n        if (!destination.merge || (destination.merge && mergedRecently)) {\n          mergedRecently = false;\n          destination.destinationX += destination.merge ? stepX : 0;\n          board[i][destination.destinationX] = board[i][j];\n\n          if (destination.destinationX !== j) {\n            movePossible = true;\n            board[i][j] = 0;\n          }\n          moveTileOnPage(i, destination.destinationX, tile, false);\n          j += stepX;\n          continue;\n        }\n\n        mergedRecently = true;\n\n        board[i][destination.destinationX] = board[i][j] * 2;\n        score += board[i][destination.destinationX];\n        scoreElement.innerHTML = score;\n        movePossible = true;\n        board[i][j] = 0;\n\n        moveTileOnPage(i, destination.destinationX, tile, destination.merge);\n        j += stepX;\n      }\n    }\n  } else if (directionY !== 0) {\n    const startY = directionY === 1 ? 3 : 0;\n    const stepY = directionY === 1 ? -1 : 1;\n\n    for (let j = 0; j < 4; j++) {\n      let i = startY;\n\n      while (isWithinBounds(i, stepY, 3)) {\n        if (board[i][j] === 0) {\n          i += stepY;\n          continue;\n        }\n\n        const destination = getDestinationSquare(i, j, directionY, 0);\n        const tileClass = '.row' + (i + 1) + '.column' + (j + 1);\n        const tile = document.querySelector(tileClass);\n\n        if (!destination.merge || (destination.merge && mergedRecently)) {\n          mergedRecently = false;\n          destination.destinationY += destination.merge ? stepY : 0;\n          board[destination.destinationY][j] = board[i][j];\n\n          if (destination.destinationY !== i) {\n            movePossible = true;\n            board[i][j] = 0;\n          }\n          moveTileOnPage(destination.destinationY, j, tile, false);\n          i += stepY;\n          continue;\n        }\n\n        mergedRecently = true;\n\n        board[destination.destinationY][j] = board[i][j] * 2;\n        score += board[destination.destinationY][j];\n        scoreElement.innerHTML = score;\n        movePossible = true;\n        board[i][j] = 0;\n\n        moveTileOnPage(destination.destinationY, j, tile, destination.merge);\n        i += stepY;\n      }\n    }\n  }\n\n  return movePossible;\n}\n\nfunction shouldContinue(direction, current, limit, merge) {\n  return (direction === 1 && current < limit && !merge)\n    || (direction === -1 && current > 0 && !merge);\n}\n\nfunction getDestinationSquare(i, j, directionY, directionX) {\n  let destinationY = i;\n  let destinationX = j;\n  let merge = false;\n\n  while (shouldContinue(directionY, destinationY, 3, merge)\n  || shouldContinue(directionX, destinationX, 3, merge)) {\n    const nextY = destinationY + directionY;\n    const nextX = destinationX + directionX;\n    const nextCell = board[nextY][nextX];\n    const currentCell = board[i][j];\n\n    if (merge) {\n      break;\n    }\n\n    if (nextCell === 0 || nextCell === currentCell) {\n      destinationY = nextY;\n      destinationX = nextX;\n      merge = nextCell === currentCell;\n    } else if (nextCell !== 0 && nextCell !== currentCell) {\n      break;\n    }\n  }\n\n  return {\n    merge,\n    destinationY,\n    destinationX,\n  };\n}\n\nfunction moveTileOnPage(row, column, tile, merge) {\n  const classes = Array.from(tile.classList);\n\n  classes.forEach((className) => {\n    if (className.startsWith('row') || className.startsWith('column')) {\n      tile.classList.remove(className);\n    }\n  });\n\n  tile.classList.add('row' + (row + 1), 'column' + (column + 1));\n\n  if (merge) {\n    let elements = tileContainer\n      .querySelectorAll('.row' + (row + 1) + '.column' + (column + 1));\n\n    while (elements.length > 1) {\n      tileContainer.removeChild(elements[0]);\n\n      elements = tileContainer\n        .querySelectorAll('.row' + (row + 1) + '.column' + (column + 1));\n    }\n\n    elements[0].className = 'tile '\n      + 'row' + (row + 1)\n      + ' column' + (column + 1)\n      + ' '\n      + 'value' + board[row][column];\n\n    elements[0].innerHTML = board[row][column];\n    elements[0].classList.add('merged');\n\n    elements[0].addEventListener(\n      'animationend',\n      () => tile.classList.remove('merged'),\n    );\n  }\n}\n\nfunction addTileToPage(row, column, value) {\n  const tile = document.createElement('div');\n\n  tile.classList.add(\n    'tile',\n    'row' + (row + 1),\n    'column' + (column + 1),\n    'value' + value,\n  );\n\n  tile.innerHTML = value;\n  tileContainer.appendChild(tile);\n  tile.classList.add('merged');\n\n  tile.addEventListener('animationend', () => tile.classList.remove('merged'));\n}\n\nfunction addRandomTile() {\n  const emptyTiles = [];\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (board[i][j] === 0) {\n        emptyTiles.push([i, j]);\n      }\n    }\n  }\n\n  const [randomI, randomJ]\n  = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n  board[randomI][randomJ] = Math.random() < 0.9 ? 2 : 4;\n\n  addTileToPage(randomI, randomJ, board[randomI][randomJ]);\n}\n\nfunction isGameOver() {\n  let emptySquare = false;\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (board[i][j] === 0) {\n        emptySquare = true;\n      }\n\n      if (board[i][j] === 2048 && !wonGame) {\n        return {\n          gameOver: true, message: 'You won!',\n        };\n      }\n\n      if (j !== 3 && board[i][j] === board[i][j + 1]) {\n        emptySquare = true;\n      }\n\n      if (i !== 3 && board[i][j] === board[i + 1][j]) {\n        emptySquare = true;\n      }\n    }\n  }\n\n  if (emptySquare) {\n    return {\n      gameOver: false, message: '',\n    };\n  }\n\n  return {\n    gameOver: true, message: 'Game over!',\n  };\n}\n\nfunction createAlert(divText, buttons) {\n  const alertedElement = document.createElement('div');\n\n  alertElement.innerText = divText;\n\n  buttons.forEach((button) => {\n    const alertedButton = document.createElement('button');\n\n    alertedButton.innerText = button.text;\n    alertedButton.onclick = button.handler;\n\n    alertedElement.appendChild(alertedButton);\n  });\n\n  return alertedElement;\n}\n\nfunction showAlert(message) {\n  alertElement.innerHTML = '';\n\n  if (message === 'Game over!' || message === 'You won!') {\n    const buttons = [\n      {\n        text: message === 'Game over!' ? 'Try again' : 'New game',\n        handler: startNewGame,\n      },\n    ];\n\n    if (message === 'You won!') {\n      buttons.push({\n        text: 'Continue',\n        handler: continuePlaying,\n      });\n\n      wonGame = true;\n      window.removeEventListener('keydown', onDirectionKeyPress);\n    }\n\n    const alertDiv = createAlert(message, buttons);\n\n    alertElement.appendChild(alertDiv);\n  }\n\n  alertElement.style.display = 'flex';\n  alertElement.style.flexDirection = 'column';\n}\n"]}